version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 3

  reciveapi:
    container_name: reciveapi
    build:
      context: .
      dockerfile: ReciveAPI/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__Port=5672
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=TrackingDb
      - MongoDB__CollectionName=TrackingRecords
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=1

  backgroundworker:
    container_name: backgroundworker
    build:
      context: .
      dockerfile: BackgroundProcessWorker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__Port=5672
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=TrackingDb
      - MongoDB__CollectionName=TrackingRecords
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=1

volumes:
  mongodb_data:
